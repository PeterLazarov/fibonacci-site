<h1>Fibonacci multiplication table</h1>

<div>
  <label>Size: </label>
  <input type="text" id="sizeInput" placeholder="The 'n' parameter">
  <button type="submit" id="generateButton">Generate</button>
</div>

<div id="fibonacciTableContainer">
</div>

<div id="savePanel">
  <p id="tableSavedLabel" style="display: none">Saved!</p>
  <button id="saveButton" style="display: none">Save</button>
</div>

<style>
  table, th, td {
    border: 1px solid black;
  }
</style>
<script>
  let sizeInput = document.getElementById('sizeInput');
  let generateButton = document.getElementById('generateButton');
  let saveButton = document.getElementById('saveButton');
  let tableSavedLabel = document.getElementById('tableSavedLabel');
  generateButton.addEventListener('click', onGenerateButtonClick)
  saveButton.addEventListener('click', onSaveButtonClick)

  function onGenerateButtonClick (e) {
    e.preventDefault();
    fetch('/fibonacci?' + new URLSearchParams({n: sizeInput.value}), {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      },
    })
    .then((response) => response.json())
    .then((data) => {
      console.log('data', data)
      visualizeFibonacciTable(data)

      saveButton.style.display = 'block';
      tableSavedLabel.style.display = 'none';
    })
  }

  function onSaveButtonClick (e) {
    e.preventDefault();
    fetch('/fibonacci', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        n: sizeInput.value
      })
    })
    .then((response) => response.json())
    .then((data) => {
      saveButton.style.display = 'none';
      tableSavedLabel.style.display = 'block';
    })
  }

  function visualizeFibonacciTable(data) {
    let fibonacciTableContainer = document.getElementById('fibonacciTableContainer');
    let html = constructTableHtml(data.multiplicationTable);
    
    fibonacciTableContainer.innerHTML = html;
  }

  function constructTableHtml (tableData) {
    let html = '<table id="fibonacciTable">'

    for (let rowIndex = 0; rowIndex < tableData.length; rowIndex++) {
      const row = tableData[rowIndex];
      html += '<tr>';
      for (let cellIndex = 0; cellIndex < row.length; cellIndex++) {
        const cellNumber = row[cellIndex];
        html += '<td>' + (typeof cellNumber !== 'object' ? cellNumber : '') + '</td>';
      }
      html += '</tr>';      
    }

    html += '</table>';
    return html;
  }

</script>